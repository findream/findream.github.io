<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>findream&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://findream.github.io/"/>
  <updated>2018-09-10T10:05:45.961Z</updated>
  <id>https://findream.github.io/</id>
  
  <author>
    <name>findream</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客总览</title>
    <link href="https://findream.github.io/2099/12/31/%E5%8D%9A%E5%AE%A2%E6%80%BB%E8%A7%88/"/>
    <id>https://findream.github.io/2099/12/31/博客总览/</id>
    <published>2099-12-31T06:02:11.000Z</published>
    <updated>2018-09-10T10:05:45.961Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;博客数据分为10类，逆向爱好者可以参考借鉴。<br><a id="more"></a></p><h2 id="CTF相关"><a href="#CTF相关" class="headerlink" title="CTF相关"></a>CTF相关</h2><ul><li><p><font color="#1E90FF"><strong>安全杂项例题:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/10/14/安全杂项例题/">https://findream.github.io/2017/10/14/安全杂项例题/</a></p></li><li><p><font color="#1E90FF"><strong>逆向工程例题:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/22/逆向工程例题/">https://findream.github.io/2017/11/22/逆向工程例题/</a></p></li><li><p><font color="#1E90FF"><strong>2015年强网杯MISC和RE:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/09/2015年强网杯/">https://findream.github.io/2018/04/09/2015年强网杯/</a></p></li><li><p><font color="#1E90FF"><strong>XCTF嘉年华资格赛</strong></font>:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/22/XCTF嘉年华比赛试题/">https://findream.github.io/2018/05/22/XCTF嘉年华比赛试题/</a></p></li><li><p><font color="#1E90FF"><strong>看雪2017CTF</strong></font>:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/05/看雪CTF2017/">https://findream.github.io/2018/05/05/看雪CTF2017/</a></p></li><li><p><font color="#1E90FF"><strong>GCTF解析</strong></font>:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/26/GCTF/">https://findream.github.io/2018/05/26/GCTF/</a></p></li><li><p><font color="#1E90FF"><strong>西电CTF(moectf):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/02/西电CTF(moectf">https://findream.github.io/2018/08/02/西电CTF(moectf)/</a>/)</p></li><li><p><font color="#1E90FF"><strong>北邮自招CTF-Re</strong></font>:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/01/北邮自招CTF/">https://findream.github.io/2018/08/01/北邮自招CTF/</a></p></li><li><p><font color="#1E90FF"><strong>巅峰极客CTF:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/28/巅峰极客CTF/">https://findream.github.io/2018/07/28/巅峰极客CTF/</a></p></li><li><font color="#1E90FF"><strong>BugKuCTF</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/14/BugKu_CTF/">https://findream.github.io/2018/08/14/BugKu_CTF/</a></li><li><font color="#1E90FF"><strong>网鼎杯CTF</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/21/网鼎杯CTF/#more">https://findream.github.io/2018/08/21/网鼎杯CTF/#more</a></li><li><font color="#1E90FF"><strong>WhaleCTF</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/09/06/WhaleCTF/">https://findream.github.io/2018/09/06/WhaleCTF/</a></li></ul><h2 id="Linux相关"><a href="#Linux相关" class="headerlink" title="Linux相关"></a>Linux相关</h2><ul><li><p><font color="#1E90FF"><strong>Linux常见命令(2)常见命令:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/28/Linux常见命令_2_其他命令/">https://findream.github.io/2018/04/28/Linux常见命令<em>2</em>其他命令/</a></p></li><li><p><font color="#1E90FF"><strong>Linux常见命令(3)软件包管理:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/07/Linux常见命令_3_软件包管理/">https://findream.github.io/2018/05/07/Linux常见命令<em>3</em>软件包管理/</a></p></li><li><p><font color="#1E90FF"><strong>Linux常见命令(4)用户和组管理:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/17/Linux常见命令_4_用户和用户组管理/">https://findream.github.io/2018/05/17/Linux常见命令<em>4</em>用户和用户组管理/</a></p></li><li><p><font color="#1E90FF"><strong>Linux常见命令(5)权限管理:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/20/Linux常见命令_5_权限管理/">https://findream.github.io/2018/05/20/Linux常见命令<em>5</em>权限管理/</a></p></li><li><p><font color="#1E90FF"><strong>Linux常见命令(6)shell基础:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/25/Linux常见命令_6_shell基础/">https://findream.github.io/2018/05/25/Linux常见命令_6_shell基础/</a></p></li><li><p><font color="#1E90FF"><strong>Linux常见命令(7)shell命令:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/06/10/Linux常见命令_7_shell编程/">https://findream.github.io/2018/06/10/Linux常见命令_7_shell编程/</a></p></li><li><p><font color="#1E90FF"><strong>Linux常见命令(8)进程管理:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/06/22/Linux常见命令_8_进程管理/">https://findream.github.io/2018/06/22/Linux常见命令<em>8</em>进程管理/</a></p></li></ul><h2 id="病毒分析相关"><a href="#病毒分析相关" class="headerlink" title="病毒分析相关"></a>病毒分析相关</h2><ul><li><p><font color="#1E90FF"><strong>搭建inetsim虚拟分析网络:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/02/10/搭建inetsim虚拟分析网络/">https://findream.github.io/2018/02/10/搭建inetsim虚拟分析网络/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(1):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/01/12/病毒分析技术_1_/">https://findream.github.io/2018/01/12/病毒分析技术<em>1</em>/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(2):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/02/病毒分析技术_2_/">https://findream.github.io/2018/03/02/病毒分析技术<em>2</em>/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(3)–小型硬盘加密病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/05/病毒分析技术_3_/">https://findream.github.io/2018/03/05/病毒分析技术<em>3</em>/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(4)–U盘病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/08/病毒分析技术_4_U盘病毒/">https://findream.github.io/2018/03/08/病毒分析技术_4_U盘病毒/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(5)–骷髅病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/15/病毒分析技术_5_骷髅病毒/">https://findream.github.io/2018/03/15/病毒分析技术<em>5</em>骷髅病毒/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(6)–熊猫烧香病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/25/病毒分析技术_6_熊猫烧香病毒/">https://findream.github.io/2018/03/25/病毒分析技术<em>6</em>熊猫烧香病毒/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(7):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/29/病毒分析技术_7_/">https://findream.github.io/2018/03/29/病毒分析技术<em>7</em>/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(8)–芦苇病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/14/病毒分析技术_8_芦苇病毒/">https://findream.github.io/2018/04/14/病毒分析技术<em>8</em>芦苇病毒/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(9)–文件下载者病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/08/病毒分析技术_9_文件下载者/">https://findream.github.io/2018/07/08/病毒分析技术<em>9</em>文件下载者/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(10)–MBR病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/23/病毒分析技术_10_MBR修改病毒/">https://findream.github.io/2018/07/23/病毒分析技术_10_MBR修改病毒/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(11)–文件下载者病毒变种:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/25/病毒分析技术_11_文件下载者变种1/">https://findream.github.io/2018/07/25/病毒分析技术<em>11</em>文件下载者变种1/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(12)–GandGrab勒索病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/31/病毒分析技术_12_GandCrab勒索病毒/">https://findream.github.io/2018/07/31/病毒分析技术_12_GandCrab勒索病毒/</a></p></li><li><p><font color="#1E90FF"><strong>病毒分析技术(13)–Wanncry勒索病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/08/病毒分析技术_13_WannaCry勒索病毒/">https://findream.github.io/2018/08/08/病毒分析技术_13_WannaCry勒索病毒/</a></p></li><li><font color="#1E90FF"><strong>病毒分析技术_14_Wannamine2.0挖矿病毒</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/09/03/病毒分析技术_14_Wannamine2.0挖矿病毒/#more">https://findream.github.io/2018/09/03/病毒分析技术_14_Wannamine2.0挖矿病毒/#more</a></li><li><font color="#1E90FF"><strong>病毒分析技术_15_sata勒索病毒:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/09/10/病毒分析技术_15_sata勒索病毒/">https://findream.github.io/2018/09/10/病毒分析技术_15_sata勒索病毒/</a></li></ul><h2 id="C-相关"><a href="#C-相关" class="headerlink" title="C++相关"></a>C++相关</h2><ul><li><p><font color="#1E90FF"><strong>第二章&lt;变量，语句&gt;:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/11/C++第二章_变量和基本类型/">https://findream.github.io/2018/04/11/C++第二章_变量和基本类型/</a></p></li><li><p><font color="#1E90FF"><strong>第三章&lt;字符串<em>向量</em>数组&gt;:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/22/C++第三章_字符串_向量_数组/">https://findream.github.io/2018/03/22/C++第三章<em>字符串</em>向量_数组/</a></p></li><li><p><font color="#1E90FF"><strong>第四章&lt;运算符&gt;:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/30/C++第四章_运算符/">https://findream.github.io/2018/03/30/C++第四章_运算符/</a></p></li><li><p><font color="#1E90FF"><strong>C++第五章&lt;语句&gt;:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/08/C++第五章_语句/">https://findream.github.io/2018/04/08/C++第五章_语句/</a></p></li><li><p><font color="#1E90FF"><strong>第六章&lt;函数&gt;:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/11/C++第六章_函数/">https://findream.github.io/2018/04/11/C++第六章_函数/</a></p></li></ul><h2 id="逆向工程相关"><a href="#逆向工程相关" class="headerlink" title="逆向工程相关"></a>逆向工程相关</h2><ul><li><p><font color="#1E90FF"><strong>浅谈脱壳技术:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/10/25/浅探脱壳技术/">https://findream.github.io/2017/10/25/浅探脱壳技术/</a></p></li><li><p><font color="#1E90FF"><strong>六类语言的逆向思路:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/02/六种常见语言的逆向思路/">https://findream.github.io/2017/11/02/六种常见语言的逆向思路/</a></p></li><li><p><font color="#1E90FF"><strong>switch结构逆向分析:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/06/switch结构逆向分析/">https://findream.github.io/2017/11/06/switch结构逆向分析/</a></p></li><li><p><font color="#1E90FF"><strong>OD断点设置技巧:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/10/OD断点设置技巧/">https://findream.github.io/2017/11/10/OD断点设置技巧/</a></p></li><li><p><font color="#1E90FF"><strong>VB程序调试练习:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/27/VB程序逆向练习/">https://findream.github.io/2017/11/27/VB程序逆向练习/</a></p></li><li><p><font color="#1E90FF"><strong>局部线程存储技术:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/12/02/线程局部存储技术/">https://findream.github.io/2017/12/02/线程局部存储技术/</a></p></li><li><p><font color="#1E90FF"><strong>给逆向工作者的忠告:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/12/09/给逆向分析人员的忠告/">https://findream.github.io/2017/12/09/给逆向分析人员的忠告/</a></p></li><li><p><font color="#1E90FF"><strong>浅谈Base64加密原理及应用:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/12/24/浅谈Base64的加密与解密/">https://findream.github.io/2017/12/24/浅谈Base64的加密与解密/</a></p></li><li><p><font color="#1E90FF"><strong>Zw和Nt的区别:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/01/23/内核Nt和Zw函数区别/">https://findream.github.io/2018/01/23/内核Nt和Zw函数区别/</a></p></li><li><p><font color="#1E90FF"><strong>浅谈SEH技术:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/01/24/浅谈SEH技术/">https://findream.github.io/2018/01/24/浅谈SEH技术/</a></p></li><li><p><font color="#1E90FF"><strong>反向shell:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/02/02/反向shell技术/">https://findream.github.io/2018/02/02/反向shell技术/</a></p></li><li><p><font color="#1E90FF"><strong>用户态下的Rootkit进程隐藏技术:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/02/07/用户态下的RootKit进程隐藏技术/">https://findream.github.io/2018/02/07/用户态下的RootKit进程隐藏技术/</a></p></li><li><p><font color="#1E90FF"><strong>反汇编对抗技术:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/02/17/对抗反汇编技术/">https://findream.github.io/2018/02/17/对抗反汇编技术/</a></p></li><li><p><font color="#1E90FF"><strong>反调试技术:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/02/19/反调试技术/">https://findream.github.io/2018/02/19/反调试技术/</a></p></li><li><p><font color="#1E90FF"><strong>常见脱壳思路:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/15/常见壳的脱壳思路/">https://findream.github.io/2018/07/15/常见壳的脱壳思路/</a></p></li><li><p><font color="#1E90FF"><strong>angr使用笔记：</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/27/二进制分析工具angr使用笔记/">https://findream.github.io/2018/08/27/二进制分析工具angr使用笔记/</a></p></li></ul><h2 id="深入解析windows操作系统"><a href="#深入解析windows操作系统" class="headerlink" title="深入解析windows操作系统"></a>深入解析windows操作系统</h2><ul><li><p><font color="#1E90FF"><strong>windows API:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/02/10/Windows_API_函数/">https://findream.github.io/2018/02/10/Windows<em>API</em>函数/</a></p></li><li><p><font color="#1E90FF"><strong>windows系统机制–陷阱分发:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/31/《Windows%20Internals》第三章_系统机制/">https://findream.github.io/2018/03/31/《Windows%20Internals》第三章_系统机制/</a></p></li><li><p><font color="#1E90FF"><strong>系统机制-映像加载器:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/26/《Windows%20Internals》第三章_映像加载器/">https://findream.github.io/2018/04/26/《Windows%20Internals》第三章_映像加载器/#more</a></p></li><li><p><font color="#1E90FF"><strong>全局标志和windows内核事件跟踪:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/26/《Windows%20Internals》第三章_全局标志和内核事件跟踪/">https://findream.github.io/2018/04/26/《Windows%20Internals》第三章_全局标志和内核事件跟踪/</a></p></li><li><p><font color="#1E90FF"><strong>第三章:系统机制-同步:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/08/《Windows%20Internals》第三章_同步/">https://findream.github.io/2018/04/08/《Windows%20Internals》第三章_同步/</a></p></li><li><p><font color="#1E90FF"><strong>注册表:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/06/04/《Windows%20Internals》第四章_注册表/">https://findream.github.io/2018/06/04/《Windows%20Internals》第四章_注册表/</a></p></li></ul><h2 id="数据结构和算法相关"><a href="#数据结构和算法相关" class="headerlink" title="数据结构和算法相关"></a>数据结构和算法相关</h2><ul><li><p><font color="#1E90FF"><strong>八皇后问题:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/10/19/算法练习1--八皇后问题/">https://findream.github.io/2017/10/19/算法练习1–八皇后问题/</a></p></li><li><p><font color="#1E90FF"><strong>浅谈数据结构之二叉树:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/05/浅谈数据结构之二叉树/">https://findream.github.io/2017/11/05/浅谈数据结构之二叉树/</a></p></li><li><p><font color="#1E90FF"><strong>浅谈数据结构之队列:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/09/浅谈数据结构之队列/">https://findream.github.io/2017/11/09/浅谈数据结构之队列/</a></p></li><li><p><font color="#1E90FF"><strong>数据结构之栈:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/12/浅谈数据结构之栈/">https://findream.github.io/2017/11/12/浅谈数据结构之栈/</a></p></li><li><p><font color="#1E90FF"><strong>浅谈hash算法前世今生:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/11/18/浅探hash算法的前世今生/">https://findream.github.io/2017/11/18/浅探hash算法的前世今生/</a></p></li><li><p><font color="#1E90FF"><strong>XUPT_ACM比赛解析:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/18/XUPT-ACM比赛题解/">https://findream.github.io/2018/03/18/XUPT-ACM比赛题解/</a></p></li><li><p><font color="#1E90FF"><strong>动态规划–编辑距离问题:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/24/动态规划_编辑距离/">https://findream.github.io/2018/05/24/动态规划_编辑距离/</a></p></li></ul><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><ul><li><p><font color="#1E90FF"><strong>Mysql基本使用:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/10/14/MySql基本操作/">https://findream.github.io/2017/10/14/MySql基本操作/</a></p></li><li><p><font color="#1E90FF"><strong>堆和栈的区别(内存和数据结构角度):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/10/17/堆栈的区别%EF%BC%88内存和数据结构角度%EF%BC%89/">https://findream.github.io/2017/10/17/堆栈的区别%EF%BC%88内存和数据结构角度%EF%BC%89/</a></p></li><li><p><font color="#1E90FF"><strong>网协纳新免试题:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2017/10/24/网协面试题/">https://findream.github.io/2017/10/24/网协面试题/</a></p></li><li><p><font color="#1E90FF"><strong>重新配置Hexo博客:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/01/29/重新配置hexo博客/">https://findream.github.io/2018/01/29/重新配置hexo博客/</a></p></li><li><p><font color="#1E90FF"><strong>CVE-2017-16995本地提权漏洞:</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/03/23/CVE-2017-16995本地提权漏洞复现/">https://findream.github.io/2018/03/23/CVE-2017-16995本地提权漏洞复现/</a></p></li></ul><h2 id="windbg学习笔记"><a href="#windbg学习笔记" class="headerlink" title="windbg学习笔记"></a>windbg学习笔记</h2><ul><li><p><font color="#1E90FF"><strong>windbg学习笔记(1):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/04/05/windbg学习笔记_1_/">https://findream.github.io/2018/04/05/windbg学习笔记<em>1</em>/</a></p></li><li><p><font color="#1E90FF"><strong>windbg学习笔记(2):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/17/windbg学习笔记_2_/">https://findream.github.io/2018/07/17/windbg学习笔记<em>2</em>/</a></p></li><li><p><font color="#1E90FF"><strong>windbg学习笔记(3):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/19/windbg学习笔记_3_/">https://findream.github.io/2018/07/19/windbg学习笔记<em>3</em>/</a></p></li><li><p><font color="#1E90FF"><strong>windbg学习笔记(4):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/22/windbg学习笔记_4_/">https://findream.github.io/2018/07/22/windbg学习笔记<em>4</em>/</a></p></li><li><p><font color="#1E90FF"><strong>windbg学习笔记(5)–内核调试(1):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/25/windbg学习笔记_5_内核调试基本命令/">https://findream.github.io/2018/07/25/windbg学习笔记<em>5</em>内核调试基本命令/</a></p></li><li><p><font color="#1E90FF"><strong>windbg学习笔记(6)–内核调试(2):</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/07/26/windbg学习笔记_6_/">https://findream.github.io/2018/07/26/windbg学习笔记<em>6</em>/</a></p></li></ul><h2 id="windows-PE结构"><a href="#windows-PE结构" class="headerlink" title="windows PE结构"></a>windows PE结构</h2><ul><li><p><font color="#1E90FF"><strong><windows pe="">延迟加载导入表:</windows></strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/14/《windows%20PE》延迟加载表/">https://findream.github.io/2018/05/14/《windows%20PE》延迟加载表/</a></p></li><li><p><font color="#1E90FF"><strong><windows pe="">重定位表:</windows></strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/14/《windows%20PE》重定位表/">https://findream.github.io/2018/05/14/《windows%20PE》重定位表/</a></p></li><li><p><font color="#1E90FF"><strong><windows pe="">导出表:</windows></strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/11/《windows%20PE》导出表/">https://findream.github.io/2018/05/11/《windows%20PE》导出表/</a></p></li><li><p><font color="#1E90FF"><strong><windows pe="">导入表:</windows></strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/09/《windows%20PE》导入表/">https://findream.github.io/2018/05/09/《windows%20PE》导入表/</a></p></li><li><p><font color="#1E90FF"><strong><windows pe="">PE文件头:</windows></strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/05/07/《windows%20PE》PE文件头/">https://findream.github.io/2018/05/07/《windows%20PE》PE文件头/</a></p></li></ul><h2 id="格蠹汇编"><a href="#格蠹汇编" class="headerlink" title="格蠹汇编"></a>格蠹汇编</h2><ul><li><font color="#1E90FF"><strong>&lt;格蠹汇编&gt;<em>第9章</em>经典阅读器的经典死锁：</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/12/《格蠹汇编》_第九章_经典阅读器的经典死锁/">https://findream.github.io/2018/08/12/《格蠹汇编》<em>第九章</em>经典阅读器的经典死锁/</a></li><li><font color="#1E90FF"><strong>《格蠹汇编》<em>第十章</em>转储分析双误谜团：</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/13/《格蠹汇编》_第十章_转储分析双误谜团/">https://findream.github.io/2018/08/13/《格蠹汇编》<em>第十章</em>转储分析双误谜团/</a> </li><li><font color="#1E90FF"><strong>《格蠹汇编》_第13章_SDK安装程序卡壳之谜：</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/16/《格蠹汇编》_第13章_SDK安装程序卡壳之谜/">https://findream.github.io/2018/08/16/《格蠹汇编》_第13章_SDK安装程序卡壳之谜/</a></li><li><font color="#1E90FF"><strong>《格蠹汇编》<em>第14章</em>是谁动了我的句柄：</strong></font>&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://findream.github.io/2018/08/16/《格蠹汇编》_第14章_是谁动了我的句柄/">https://findream.github.io/2018/08/16/《格蠹汇编》<em>第14章</em>是谁动了我的句柄/</a></li><li><font color="#1E90FF"><strong>&lt;格蠹汇编&gt;<em>第21章</em>趣谈托管程序的辅助调试线程：</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/27/《格蠹汇编》_第21章_趣谈托管程序的辅助调试线程/">https://findream.github.io/2018/08/27/《格蠹汇编》<em>第21章</em>趣谈托管程序的辅助调试线程/</a></li><li><font color="#1E90FF"><strong>&lt;格蠹汇编&gt;<em>第25章</em>如何调试窗口大总管：</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://findream.github.io/2018/08/28/《格蠹汇编》_第25章_如何调试窗口大总管/">https://findream.github.io/2018/08/28/《格蠹汇编》<em>第25章</em>如何调试窗口大总管/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;博客数据分为10类，逆向爱好者可以参考借鉴。&lt;br&gt;
    
    </summary>
    
      <category term="总览" scheme="https://findream.github.io/categories/%E6%80%BB%E8%A7%88/"/>
    
    
  </entry>
  
  <entry>
    <title>常见的脱壳思路</title>
    <link href="https://findream.github.io/2018/07/15/%E5%B8%B8%E8%A7%81%E5%A3%B3%E7%9A%84%E8%84%B1%E5%A3%B3%E6%80%9D%E8%B7%AF/"/>
    <id>https://findream.github.io/2018/07/15/常见壳的脱壳思路/</id>
    <published>2018-07-15T06:02:11.000Z</published>
    <updated>2018-07-16T16:27:58.941Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;去年暑假，学习了如何脱壳，但是没有深入的了解这一块的知识，现在花费差不多三天的时间总结一下。<br><a id="more"></a></p><h1 id="UPX壳"><a href="#UPX壳" class="headerlink" title="UPX壳"></a>UPX壳</h1><h2 id="单步法"><a href="#单步法" class="headerlink" title="单步法"></a>单步法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序流程不断向下，然后遇到POPAX，接着一个段间跳转后，直达EOP。</p><ul><li>不断向下寻找EOP<br>  <img src="https://i.imgur.com/F2qs8AH.png" alt=""></li><li>使用LoadPe转储文件<ul><li>1）右键修正镜像大小</li><li>2）完整转储文件</li></ul></li><li>利用导入表修复工具去修复导入表<ul><li>1）修改EOP</li><li>2）自动搜索</li><li>3）获取输入表</li><li>4）显示无效函数</li><li>5）修复转储文件<br><img src="https://i.imgur.com/TsxAAK0.png" alt=""></li></ul></li></ul><h2 id="ESP定律法"><a href="#ESP定律法" class="headerlink" title="ESP定律法"></a>ESP定律法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序在运行真正代码前会解密已经压缩过的代码，解压程序将一些关键代码数据压栈，解压完成后，解压程序在将这些代码出栈。在压栈出栈处下硬件断点，如果执行，程序必定断在解压完成后的代码前。这就是ESP定律法，主要利用程序运行中，栈指针保持平衡。</p><ul><li>寻找使用ESP寄存器变化的代码，寻找ESP对应的内存地址，然后在地址上下硬件断点(dd,hr)。<br>  <img src="https://i.imgur.com/TFc7T9k.png" alt=""></li><li>f7跑起来，到达段间跳转<br>  <img src="https://i.imgur.com/fVBLYoo.png" alt=""></li><li>单步一下直达EOP</li><li>利用上一步脱壳的方法脱壳。</li></ul><h2 id="二次内存镜像法"><a href="#二次内存镜像法" class="headerlink" title="二次内存镜像法"></a>二次内存镜像法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一次将断点设置在代码段reloc资源节区是为了让加壳程序执行完解压过程，第二次将断点设置在代码段是为了寻找EOP。</p><ul><li>在代码段的资源节区设置在访问上设置中断(内存访问断点)<br>  <img src="https://i.imgur.com/MnuhKMh.png" alt=""></li><li>在代码段的text代码节区设置内存访问断点<br>  <img src="https://i.imgur.com/kxyT3Yi.png" alt=""></li><li>直达EOP<br>  <img src="https://i.imgur.com/c7q7czO.png" alt=""></li><li>脱壳</li></ul><h2 id="一步直达法"><a href="#一步直达法" class="headerlink" title="一步直达法"></a>一步直达法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个方法适用于UPX和部分北斗的壳，这部分壳在压缩的时候，使用了POPAP和PUSHAP这两个指令。</p><h1 id="ASPACK壳"><a href="#ASPACK壳" class="headerlink" title="ASPACK壳"></a>ASPACK壳</h1><h2 id="单步法-1"><a href="#单步法-1" class="headerlink" title="单步法"></a>单步法</h2><h2 id="ESP定律法-1"><a href="#ESP定律法-1" class="headerlink" title="ESP定律法"></a>ESP定律法</h2><h2 id="二次内存镜像法-1"><a href="#二次内存镜像法-1" class="headerlink" title="二次内存镜像法"></a>二次内存镜像法</h2><h2 id="一步直达法-1"><a href="#一步直达法-1" class="headerlink" title="一步直达法"></a>一步直达法</h2><h2 id="模拟跟踪法"><a href="#模拟跟踪法" class="headerlink" title="模拟跟踪法"></a>模拟跟踪法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;针对ASPACK壳</p><ul><li>寻找含有SFX节区的节区，记录其地址xxxxx</li><li>命令下输入tc eip&lt; xxxxxx<br>  <img src="https://i.imgur.com/XhtxvVD.png" alt=""></li></ul><h2 id="SFX法"><a href="#SFX法" class="headerlink" title="SFX法"></a>SFX法</h2><ul><li>设置调试器SFX选项，设置成第二项：块方式跟踪到真正入口点(也有可能是第三个选项)<br>  <img src="https://i.imgur.com/D4lMMts.png" alt=""></li></ul><h1 id="NSPACK"><a href="#NSPACK" class="headerlink" title="NSPACK"></a>NSPACK</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NSPACK又名北斗，是病毒木马经常使用的压缩壳，本身使用vc写的。跳入oep的特征是：<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">popad</span></div><div class="line"><span class="keyword">popfd</span></div><div class="line"><span class="keyword">jmp</span> xxxxxxxxx</div></pre></td></tr></table></figure></p><h2 id="单步法-2"><a href="#单步法-2" class="headerlink" title="单步法"></a>单步法</h2><h2 id="ESP定律法-2"><a href="#ESP定律法-2" class="headerlink" title="ESP定律法"></a>ESP定律法</h2><h2 id="二次内存镜像法-2"><a href="#二次内存镜像法-2" class="headerlink" title="二次内存镜像法"></a>二次内存镜像法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在使用这个方式的时候，由于NSPACK没有压缩资源，也就是没有资源节区，所以直接在text节区下断即可！</p><h2 id="一步直达法-2"><a href="#一步直达法-2" class="headerlink" title="一步直达法"></a>一步直达法</h2><h2 id="模拟跟踪法-1"><a href="#模拟跟踪法-1" class="headerlink" title="模拟跟踪法"></a>模拟跟踪法</h2><h2 id="SFX法-1"><a href="#SFX法-1" class="headerlink" title="SFX法"></a>SFX法</h2><h1 id="FSG壳"><a href="#FSG壳" class="headerlink" title="FSG壳"></a>FSG壳</h1><h2 id="单步法-3"><a href="#单步法-3" class="headerlink" title="单步法"></a>单步法</h2><h2 id="ESP定律法-3"><a href="#ESP定律法-3" class="headerlink" title="ESP定律法"></a>ESP定律法</h2><h2 id="适用于FSG的特殊方法"><a href="#适用于FSG的特殊方法" class="headerlink" title="适用于FSG的特殊方法"></a>适用于FSG的特殊方法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;运行完popad后，寻找堆栈窗口第四个参数，那个就是oep。<br>    <img src="https://i.imgur.com/ZeoVgwB.png" alt=""><br>    <img src="https://i.imgur.com/eXhv9s1.png" alt=""></p><h2 id="修复FSG造成的导入表丢失问题"><a href="#修复FSG造成的导入表丢失问题" class="headerlink" title="修复FSG造成的导入表丢失问题"></a>修复FSG造成的导入表丢失问题</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在完成之前的修复后，发现还是无法运行程序，可以考虑修复导入表信息。</p><ul><li>寻找一个导入函数<br>  <img src="https://i.imgur.com/Idskw32.png" alt=""></li><li>前后都是空的，说明这是导入表信息</li><li>在IAT fix中修复，修改RVA和尺寸<br>  <img src="https://i.imgur.com/LivmMsk.png" alt=""></li></ul><h1 id="PECompact2-X"><a href="#PECompact2-X" class="headerlink" title="PECompact2.X"></a>PECompact2.X</h1><h2 id="单步法-4"><a href="#单步法-4" class="headerlink" title="单步法"></a>单步法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个壳用了一个巧妙的方法，把它解压代码放入异常处理例程中了，我们直接跟入处理例程，程序会自动回到用户领空。</p><h2 id="ESP定律法-4"><a href="#ESP定律法-4" class="headerlink" title="ESP定律法"></a>ESP定律法</h2><h2 id="BP-VirtualFree法1"><a href="#BP-VirtualFree法1" class="headerlink" title="BP VirtualFree法1"></a>BP VirtualFree法1</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>这个方法利用了是解密解压缩过程中，需要对内存进行释放。在此下断的好处是能够在程序解压缩之后断下。</strong></p><ul><li>BP VirtualFree下断点</li><li>shift+f9，忽略异常运行(存在异常)</li><li>取消断点，返回到用户领空</li><li>搜索命令：<strong>push 8000</strong></li><li>F4运行到此处，单步即可</li></ul><h2 id="BP-VirtualFree法2"><a href="#BP-VirtualFree法2" class="headerlink" title="BP VirtualFree法2"></a>BP VirtualFree法2</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一次做代码的恢复，第二次更想是IAT的导入。</p><ul><li>BP VirtualFree下断点</li><li>使用两次shift+F9<ul><li>第一次<br><img src="https://i.imgur.com/W3GxMh1.png" alt=""></li><li>第二次<br><img src="https://i.imgur.com/4PQhrw5.png" alt=""></li></ul></li><li>取消断点</li><li>返回用户空间</li><li>单步<br>  <img src="https://i.imgur.com/usTIm4Q.png" alt=""></li></ul><h2 id="bp-VirtualAlloc法1"><a href="#bp-VirtualAlloc法1" class="headerlink" title="bp VirtualAlloc法1"></a>bp VirtualAlloc法1</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在为解压出来的代码分配内存空间，所以可以对VirtualAlloc下断。</p><ul><li>bp VirtualAlloc</li><li>shift+F9</li><li>ALT+F9返回用户代码</li><li>单步</li></ul><h2 id="PECompact使用的特殊方法-1"><a href="#PECompact使用的特殊方法-1" class="headerlink" title="PECompact使用的特殊方法(1)"></a>PECompact使用的特殊方法(1)</h2><ul><li><p>看程序原始入口点</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">5.0040</span>A86D &gt;  B8 <span class="number">74</span>DE4500     mov eax,qqspirit<span class="number">.0045</span>DE74</div></pre></td></tr></table></figure></li><li><p>bp 45DE74 下断</p></li><li>单步<br>  <img src="https://i.imgur.com/a2asdBV.png" alt=""></li></ul><h2 id="最后一次异常法"><a href="#最后一次异常法" class="headerlink" title="最后一次异常法"></a>最后一次异常法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;假设程序在第m次运行跑飞，我们查看第m-1次的堆栈情况。</p><ul><li>把所有忽略异常取消</li><li>shift+F9运行程序</li><li>取m-1次的堆栈里面的SE函数</li><li>在SE函数开始处下断。</li><li>单步</li></ul><h1 id="EZIP壳"><a href="#EZIP壳" class="headerlink" title="EZIP壳"></a>EZIP壳</h1><h2 id="单步法-5"><a href="#单步法-5" class="headerlink" title="单步法"></a>单步法</h2><h2 id="ESP定律法-5"><a href="#ESP定律法-5" class="headerlink" title="ESP定律法"></a>ESP定律法</h2><h2 id="修复文件"><a href="#修复文件" class="headerlink" title="修复文件"></a>修复文件</h2><ul><li>和上述一样操作</li><li>重新寻找新的RVA和大小<br>  <img src="https://i.imgur.com/l1Gplvs.png" alt=""></li><li>利用LoadPE进行PE合并</li></ul><h1 id="tElock-0-98b1壳"><a href="#tElock-0-98b1壳" class="headerlink" title="tElock 0.98b1壳"></a>tElock 0.98b1壳</h1><h2 id="最后一次异常法-1"><a href="#最后一次异常法-1" class="headerlink" title="最后一次异常法"></a>最后一次异常法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;加壳程序通常在程序执行的开始部分采用SEH技术进行异常的处理<strong>为了获取程序控制权，</strong>而最后一次异常是为了将程序控制权交给程序本身，这就是最后一次异常法的基本原理。需要注意一下方面：</p><ul><li>除了关闭调试器的异常选项，还有关闭插件StrongOd的异常选项</li><li>如果在SE句柄函数下断后，一直断不了的话，可以使用SHIFT+F9断下。<br>  <img src="https://i.imgur.com/uuFUal4.png" alt=""></li></ul><h2 id="模拟跟踪法-2"><a href="#模拟跟踪法-2" class="headerlink" title="模拟跟踪法"></a>模拟跟踪法</h2><ul><li>利用最后一次异常法</li><li>使用模拟跟踪法<ul><li>内存中找SFX段，记录段地址xxxxx</li><li>输入tc eip&lt;xxxxx<br><img src="https://i.imgur.com/aWj4xB2.png" alt=""></li></ul></li></ul><h2 id="两次内存镜像法"><a href="#两次内存镜像法" class="headerlink" title="两次内存镜像法"></a>两次内存镜像法</h2><h1 id="exe32pack壳"><a href="#exe32pack壳" class="headerlink" title="exe32pack壳"></a>exe32pack壳</h1><h2 id="ESP定律法-6"><a href="#ESP定律法-6" class="headerlink" title="ESP定律法"></a>ESP定律法</h2><h1 id="WinUpack壳"><a href="#WinUpack壳" class="headerlink" title="WinUpack壳"></a>WinUpack壳</h1><h2 id="单步法-6"><a href="#单步法-6" class="headerlink" title="单步法"></a>单步法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个壳有个特点：程序在完成代码的解压后，并不直接进入oep，而是执行完IAT的重构后，跳转到判断是否完成IAT重构的判断中，然后执行是否跳转OEP。<br>     <img src="https://i.imgur.com/RDlSEvO.png" alt=""><br>     <img src="https://i.imgur.com/djXvlo2.png" alt=""></p><ul><li>根据跳转的条件判断：eax==0的时候跳转成功。设置条件断点即可！！</li></ul><h1 id="常见语言的入口点"><a href="#常见语言的入口点" class="headerlink" title="常见语言的入口点"></a>常见语言的入口点</h1><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">常见语言的入口点：</div><div class="line"></div><div class="line">VB：</div><div class="line"></div><div class="line">004012D4 &gt;  <span class="number">68</span> <span class="number">54474000</span>     <span class="keyword">push</span> QQ个性网.<span class="number">00404754</span></div><div class="line">004012D9    E8 F0FFFFFF     <span class="keyword">call</span> &lt;<span class="keyword">jmp</span>.&amp;MSVBVM60.#<span class="number">100</span>&gt;</div><div class="line">004012DE    <span class="number">0000</span>            <span class="keyword">add</span> <span class="built_in">byte</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[<span class="built_in">eax</span>],<span class="built_in">al</span></div><div class="line">004012E0    <span class="number">0000</span>            <span class="keyword">add</span> <span class="built_in">byte</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[<span class="built_in">eax</span>],<span class="built_in">al</span></div><div class="line">004012E2    <span class="number">0000</span>            <span class="keyword">add</span> <span class="built_in">byte</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[<span class="built_in">eax</span>],<span class="built_in">al</span></div><div class="line">004012E4    <span class="number">3000</span>            <span class="keyword">xor</span> <span class="built_in">byte</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[<span class="built_in">eax</span>],<span class="built_in">al</span></div><div class="line">004012E6    <span class="number">0000</span>            <span class="keyword">add</span> <span class="built_in">byte</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[<span class="built_in">eax</span>],<span class="built_in">al</span></div><div class="line">004012E8    <span class="number">48</span>              <span class="keyword">dec</span> <span class="built_in">eax</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="symbol">delphi:</span></div><div class="line"></div><div class="line">004A5C54 &gt;  <span class="number">55</span>              <span class="keyword">push</span> <span class="built_in">ebp</span></div><div class="line">004A5C55    8BEC            <span class="keyword">mov</span> <span class="built_in">ebp</span>,<span class="built_in">esp</span></div><div class="line">004A5C57    83C4 F0         <span class="keyword">add</span> <span class="built_in">esp</span>,-<span class="number">10</span></div><div class="line">004A5C5A    B8 EC594A00     <span class="keyword">mov</span> <span class="built_in">eax</span>,openpro.004A59EC</div><div class="line"></div><div class="line">BC++:</div><div class="line"></div><div class="line"><span class="number">00401678</span> &gt; /EB <span class="number">10</span>           <span class="keyword">jmp</span> short btengine.0040168A</div><div class="line">0040167A   |<span class="number">66</span>:623A         <span class="keyword">bound</span> <span class="built_in">di</span>,<span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[<span class="built_in">edx</span>]</div><div class="line"><span class="number">0040167D</span>   |<span class="number">43</span>              <span class="keyword">inc</span> <span class="built_in">ebx</span></div><div class="line">0040167E   |2B2B            <span class="keyword">sub</span> <span class="built_in">ebp</span>,<span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[<span class="built_in">ebx</span>]</div><div class="line"><span class="number">00401680</span>   |<span class="number">48</span>              <span class="keyword">dec</span> <span class="built_in">eax</span></div><div class="line"><span class="number">00401681</span>   |4F              <span class="keyword">dec</span> <span class="built_in">edi</span></div><div class="line"><span class="number">00401682</span>   |4F              <span class="keyword">dec</span> <span class="built_in">edi</span></div><div class="line"><span class="number">00401683</span>   |4B              <span class="keyword">dec</span> <span class="built_in">ebx</span></div><div class="line"><span class="number">00401684</span>   |<span class="number">90</span>              <span class="keyword">nop</span></div><div class="line"><span class="number">00401685</span>  -|E9 <span class="number">98005400</span>     <span class="keyword">jmp</span> <span class="number">00941722</span></div><div class="line">0040168A   \A1 8B005400     <span class="keyword">mov</span> <span class="built_in">eax</span>,<span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[54008B]</div><div class="line">0040168F    C1E0 <span class="number">02</span>         <span class="keyword">shl</span> <span class="built_in">eax</span>,<span class="number">2</span></div><div class="line"><span class="number">00401692</span>    A3 8F005400     <span class="keyword">mov</span> <span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[54008F],<span class="built_in">eax</span></div><div class="line"><span class="number">00401697</span>    <span class="number">52</span>              <span class="keyword">push</span> <span class="built_in">edx</span></div><div class="line"><span class="number">00401698</span>    6A <span class="number">00</span>           <span class="keyword">push</span> <span class="number">0</span></div><div class="line">0040169A    E8 99D01300     <span class="keyword">call</span> &lt;<span class="keyword">jmp</span>.&amp;KERNEL32.GetModuleHandleA&gt;</div><div class="line">0040169F    8BD0            <span class="keyword">mov</span> <span class="built_in">edx</span>,<span class="built_in">eax</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">VC++:</div><div class="line"></div><div class="line">0040A41E &gt;  <span class="number">55</span>              <span class="keyword">push</span> <span class="built_in">ebp</span></div><div class="line">0040A41F    8BEC            <span class="keyword">mov</span> <span class="built_in">ebp</span>,<span class="built_in">esp</span></div><div class="line">0040A421    6A FF           <span class="keyword">push</span> -<span class="number">1</span></div><div class="line">0040A423    <span class="number">68</span> C8CB4000     <span class="keyword">push</span> 跑跑排行.0040CBC8</div><div class="line">0040A428    <span class="number">68</span> A4A54000     <span class="keyword">push</span> &lt;<span class="keyword">jmp</span>.&amp;MSVCRT._except_handler3&gt;</div><div class="line">0040A42D    <span class="number">64</span>:A1 <span class="number">00000000</span>  <span class="keyword">mov</span> <span class="built_in">eax</span>,<span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">fs</span>:[<span class="number">0</span>]</div><div class="line">0040A433    <span class="number">50</span>              <span class="keyword">push</span> <span class="built_in">eax</span></div><div class="line">0040A434    <span class="number">64</span>:<span class="number">8925</span> <span class="number">0000000</span>&gt;<span class="keyword">mov</span> <span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">fs</span>:[<span class="number">0</span>],<span class="built_in">esp</span></div><div class="line">0040A43B    83EC <span class="number">68</span>         <span class="keyword">sub</span> <span class="built_in">esp</span>,<span class="number">68</span></div><div class="line">0040A43E    <span class="number">53</span>              <span class="keyword">push</span> <span class="built_in">ebx</span></div><div class="line">0040A43F    <span class="number">56</span>              <span class="keyword">push</span> <span class="built_in">esi</span></div><div class="line">0040A440    <span class="number">57</span>              <span class="keyword">push</span> <span class="built_in">edi</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">MASM(汇编):</div><div class="line"></div><div class="line">004035C9 &gt;  6A <span class="number">00</span>           <span class="keyword">push</span> <span class="number">0</span></div><div class="line">004035CB    E8 A20A0000     <span class="keyword">call</span> &lt;<span class="keyword">jmp</span>.&amp;kernel32.GetModuleHandleA&gt;</div><div class="line">004035D0    A3 5B704000     <span class="keyword">mov</span> <span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[40705B],<span class="built_in">eax</span></div><div class="line">004035D5    <span class="number">68</span> <span class="number">80000000</span>     <span class="keyword">push</span> <span class="number">80</span></div><div class="line">004035DA    <span class="number">68</span> 2C754000     <span class="keyword">push</span> <span class="number">11.</span>0040752C</div><div class="line">004035DF    FF35 5B704000   <span class="keyword">push</span> <span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[40705B]</div><div class="line">004035E5    E8 820A0000     <span class="keyword">call</span> &lt;<span class="keyword">jmp</span>.&amp;kernel32.GetModuleFileNameA&gt;</div><div class="line">004035EA    E8 <span class="number">87070000</span>     <span class="keyword">call</span> <span class="number">11.</span>00403D76</div><div class="line">004035EF    6A <span class="number">00</span>           <span class="keyword">push</span> <span class="number">0</span></div><div class="line">004035F1    <span class="number">68</span> 0B364000     <span class="keyword">push</span> <span class="number">11.</span>0040360B</div><div class="line">004035F6    6A <span class="number">00</span>           <span class="keyword">push</span> <span class="number">0</span></div><div class="line">004035F8    6A <span class="number">64</span>           <span class="keyword">push</span> <span class="number">64</span></div><div class="line">004035FA    FF35 5B704000   <span class="keyword">push</span> <span class="built_in">dword</span> <span class="built_in">ptr</span> <span class="built_in">ds</span>:[40705B]</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;去年暑假，学习了如何脱壳，但是没有深入的了解这一块的知识，现在花费差不多三天的时间总结一下。&lt;br&gt;
    
    </summary>
    
      <category term="windows PE" scheme="https://findream.github.io/categories/windows-PE/"/>
    
    
  </entry>
  
  <entry>
    <title>重新配置hexo博客</title>
    <link href="https://findream.github.io/2018/01/29/%E9%87%8D%E6%96%B0%E9%85%8D%E7%BD%AEhexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://findream.github.io/2018/01/29/重新配置hexo博客/</id>
    <published>2018-01-29T12:45:11.000Z</published>
    <updated>2018-01-29T10:18:06.745Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第一步：下载Git和Node</strong></p><p><strong>第二歩：在桌面右键启动git 然后安装hexo:<br></strong><br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-<span class="keyword">cli</span></div></pre></td></tr></table></figure></p><a id="more"></a><p><strong>第三步：接着在文件夹里右键git，输入以下命令，然后在浏览器中输入localhost：4000看是否能本地预览</strong><br><br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo -s(或者hexo <span class="keyword">server</span>)</div></pre></td></tr></table></figure></p><p><strong>第四步：在Git下输入以下命令:(邮箱改成你的)</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ssh-keygen</span> <span class="selector-tag">-t</span> <span class="selector-tag">rsa</span> <span class="selector-tag">-C</span> "1434905079@<span class="keyword">qq</span>.<span class="keyword">com</span>"</div></pre></td></tr></table></figure></p><p><strong>第五步：打开 C:\Users\bxm09.ssh\id_rsa.pub，此文件里面内容为刚才生成的密钥，准确的复制这个文件的内容，粘贴到<a href="https://github.com/settings/ssh" target="_blank" rel="external">https://github.com/settings/ssh</a> 的 new SSH key 中</strong></p><p><strong>第六步：测试，输入以下命令：不要修改<br></strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-T</span> <span class="selector-tag">git</span>@<span class="keyword">github</span>.<span class="keyword">com</span></div></pre></td></tr></table></figure></p><p>得到以下反馈：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">The</span> <span class="selector-tag">authenticity</span> <span class="selector-tag">of</span> <span class="selector-tag">host</span> ‘<span class="selector-tag">github</span><span class="selector-class">.com</span> (<span class="number">207.97</span>.<span class="number">227.239</span>)’ <span class="selector-tag">can</span>’<span class="selector-tag">t</span> <span class="selector-tag">be</span> <span class="selector-tag">established</span>.</div><div class="line"><span class="selector-tag">RSA</span> <span class="selector-tag">key</span> <span class="selector-tag">fingerprint</span> <span class="selector-tag">is</span> <span class="selector-tag">16</span><span class="selector-pseudo">:27</span><span class="selector-pseudo">:ac</span><span class="selector-pseudo">:a5</span><span class="selector-pseudo">:76</span><span class="selector-pseudo">:28</span><span class="selector-pseudo">:2d</span><span class="selector-pseudo">:36</span><span class="selector-pseudo">:63</span><span class="selector-pseudo">:1b</span><span class="selector-pseudo">:56</span><span class="selector-pseudo">:4d</span><span class="selector-pseudo">:eb</span><span class="selector-pseudo">:df</span><span class="selector-pseudo">:a6</span><span class="selector-pseudo">:48.</span></div><div class="line"><span class="selector-tag">Are</span> <span class="selector-tag">you</span> <span class="selector-tag">sure</span> <span class="selector-tag">you</span> <span class="selector-tag">want</span> <span class="selector-tag">to</span> <span class="selector-tag">continue</span> <span class="selector-tag">connecting</span> (yes/no)?</div></pre></td></tr></table></figure></p><p>输入yes</p><p><strong>第七步：现在你已经可以通过 SSH 链接到 GitHub 了，还有一些个人信息需要完善的。Git 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的。</strong><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"findream"</span></div></pre></td></tr></table></figure></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"1434905079@qq.com"</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第一步：下载Git和Node&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二歩：在桌面右键启动git 然后安装hexo:&lt;br&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g hexo-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
